% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ToothAlignment.R
\name{ToothAlignment}
\alias{ToothAlignment}
\title{ToothAlignment}
\usage{
ToothAlignment(mesh1, mesh2, mesh3 = NULL, set, outline)
}
\arguments{
\item{mesh1}{3D mesh: dental mesh (enamel)}

\item{mesh2}{3D mesh: dental mesh (dentin)}

\item{mesh3}{3D mesh: dental mesh (dental pulp)}

\item{set}{matrix: 5 landmarks acquired on the mesh (see details)}

\item{outline}{matrix: set of coordinates along the cerical outline}
}
\value{
almesh1: mesh of the aligned mesh1

almesh2: mesh of the aligned mesh2

almesh3: mesh of the aligned mesh3

alset: coordinates of the aligned landmark configuration

blength: biomechanical lenght of the root (see details)

margins: coordinates of the landmarks in correspondence of the four margins

margins_sel: position of the margine along the outline

aloutline: coordinates of the aligned cervical outline
}
\description{
Align dental meshes using as reference the cervical outline and five landmarks
}
\details{
The function needs five landmarks to align the dental meshes. Usually landmarks from 1 to 4 define the Linguale, Mesial, Buccal and Distal margins.
The fifth landmark defines the end of the z axis (biomechanical length). The centroid of the cervical outline defines the origin of axes.
}
\examples{
data("ToothExData")
Enamel<-ToothExData$enamel
Dentin<-ToothExData$dentin
Pulp<-ToothExData$pulp
outline<-ToothExData$outline
set<-ToothExData$set
AlignMeshes<-ToothAlignment(mesh1=Enamel,mesh2=Dentin,mesh3=Pulp,set,outline)
if(interactive()){
require(rgl)
open3d()
shade3d(AlignMeshes$almesh1$mesh,col="white",alpha=0.5)
shade3d(AlignMeshes$almesh2$mesh,col="pink",alpha=0.5,add=TRUE)
shade3d(AlignMeshes$almesh3$mesh,col="orange",alpha=0.5,add=TRUE)
spheres3d(AlignMeshes$alset,radius=0.25)
spheres3d(AlignMeshes$outline,radius=0.1,col="blue")
lines3d(AlignMeshes$outline)
text3d(rbind(AlignMeshes$outline[AlignMeshes$margins_sel,],AlignMeshes$alset[4,]),texts=1:5,cex=4)
spheres3d(AlignMeshes$alset[2,],radius=0.3,col="red")
arrow3d(colMeans(AlignMeshes$outline),AlignMeshes$alset[4,],lwd=3,col="green",type="lines",s=1/10)
lines3d(rbind(AlignMeshes$alset[2,],AlignMeshes$alset[1,]),lwd=3,col="green")
axes3d()
}
}
\author{
Antonio Profico
}
